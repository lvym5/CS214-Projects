Script started on 2024-04-15 14:17:40-04:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="160" LINES="46"]
]0;lvm5@maroon07: ~/214/projects/11/clojure/src[01;32mlvm5@maroon07[00m:[01;34m~/214/projects/11/clojure/src[00m$ cat search.clj listOps.clj 
;; search.clj tests a function to search a list for a value.
;;
;; Output: three lists, and 
;;          the results of calling a maxList() function on them.
;;
;; Usage: clojure -m search
;;
;; Name: Lily McAby
;; Date: 4/15/2024
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns search)

(load "listOps")                      ; load module

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function -main tests function listMax(). 
;; Output: the results of testing listMax() on various lists.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main []
  (let
    [
     list1 '(99 88 77 66 55)        ; max is first value
     list2 (list 55 66 77 88 99)    ; max is last value
     list3 (list 55 77 99 88 66)    ; max is middle value
     emptyList '()                  ; list is empty
     list4 (list 55 66 77 88)    

     ]

    (println)
    (println "list1: " list1)        ; print list1,
    (println "list2: " list2)        ;   list2,
    (println "list3: " list3)        ;   list3,
    (println "list4: " list4)
    (println)                        ;   and search


    (println "If -1 is returned as the index, then the number was not found in the list.")

    (println "In list1, 99 is found in index: " (searchFor list1 99))
    (println "In list2, 99 is found in index: " (searchFor list2 99))
    (println "In list3, 99 is found in index: " (searchFor list3 99))
    (println "In list4, 99 is found in index: " (searchFor list4 99))

    )
  )

;; listOps.clj is a Clojure "module" for list operations.
;;
;; Name: Lily McAboy
;; Date: 4/15/2024
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; searchFor() traverses a list for a value
;; Receive: a list, a number to search for
;; Return: return the index in the list. 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn searchFor [aList myValue]
  (if (list? aList)
    (if (empty? aList)
      -1
      (let [myRes (first (filter (fn [[idx v]] (= v myValue))
                                (map-indexed vector aList)))]
        (if myRes
          (first myRes)
          -1)))))

]0;lvm5@maroon07: ~/214/projects/11/clojure/src[01;32mlvm5@maroon07[00m:[01;34m~/214/projects/11/clojure/src[00m$ clojure -m search.clj      

list1:  (99 88 77 66 55)
list2:  (55 66 77 88 99)
list3:  (55 77 99 88 66)
list4:  (55 66 77 88)

If -1 is returned as the index, then the number was not found in the list.
In list1, 99 is found in index:  0
In list2, 99 is found in index:  4
In list3, 99 is found in index:  2
In list4, 99 is found in index:  -1
]0;lvm5@maroon07: ~/214/projects/11/clojure/src[01;32mlvm5@maroon07[00m:[01;34m~/214/projects/11/clojure/src[00m$ exit

Script done on 2024-04-15 14:18:00-04:00 [COMMAND_EXIT_CODE="0"]
